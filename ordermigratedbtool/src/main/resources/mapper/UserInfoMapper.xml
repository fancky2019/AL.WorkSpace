<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlyedu.ordermigratedbtool.dao.UserInfoMapper">
    <update id="updateRelative" parameterType="com.onlyedu.ordermigratedbtool.model.entity.UserInfo">
        UPDATE [NewClassesAdmin].[dbo].[UserInfo] SET  [EosStudentID] = #{eosStudentID,jdbcType=NVARCHAR} ,[RelativeState] = #{relativeState,jdbcType=BIT}
        WHERE Id=#{id,jdbcType=INTEGER}
    </update>

    <sql id="dynamicWhere">
        <if test="userName != null and userName !='' ">
            and ui.UserName LIKE '%'+#{userName,jdbcType=NVARCHAR}+'%'
        </if>
        <if test="userId != null and userId !='' ">
            and ui.UserId LIKE '%'+#{userId,jdbcType=NVARCHAR}+'%'
        </if>
        <if test="studentNo != null and studentNo !='' ">
            and left(ui.StudentId ,8) LIKE '%'+#{studentNo,jdbcType=NVARCHAR}+'%'
        </if>
        <if test="mobilePhone != null">
            and ui.MobilePhone LIKE '%'+#{mobilePhone,jdbcType=NVARCHAR}+'%'
        </if>
        <if test="tel != null">
            and ui.Tel LIKE '%'+#{tel,jdbcType=NVARCHAR}+'%'
        </if>
        <if test="grade != null">
            and ui.Grade = #{grade,jdbcType=VARCHAR}
        </if>
        <if test="relativeState != null">
            and isnull(ui.RelativeState,0) = #{relativeState,jdbcType=VARCHAR}
        </if>
        <if test="regStartTime != null">
            and ui.regTime <![CDATA[ >= ]]> #{regStartTime,jdbcType=DATE}
        </if>   <if test="regEndTime != null">
        and ui.regTime <![CDATA[ <= ]]> #{regEndTime,jdbcType=DATE}
    </if>
    </sql>

    <sql id="basicTable">
        from [NewClassesAdmin].[dbo].UserInfo ui
        left join School s on s.Guid=ui.SchoolId
        where 1=1
        and ui.IsDelete=0 and ISNULL(ui.Status,0)=1 and ISNULL(ui.UserType,0)=1 and ISNULL(ui.UserId,'')  <![CDATA[ <> ]]>''
        and EXISTS (
        select StudentId from [NewClassesAdmin].[dbo].OrderHead oh
        where 1=1
        and oh.IsDelete=0 and oh.OrderType between 1 and 2 and oh.OrderStateId=6
        and ui.StudentId=oh.StudentId
        )
    </sql>
    <select id="getUserWithOrder" parameterType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoDto" resultType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoDto">
        select * from (
        select ROW_NUMBER() over(order by (select 0) ) as RowNum,*
        from
        (
        select   ui.Id,  ui.UserId,ui.StudentId, left(ui.StudentId ,8)  studentNo,ui.UserName ,ui.Grade ,ui.MobilePhone,ui.Tel,s.School,ui.RegTime,
        ui.[RelativeState],ui.[EosStudentID]
        <include refid="basicTable"></include>
        <include refid="dynamicWhere"></include>
        ) t1
        )t2
        where t2.RowNum BETWEEN  (#{pageIndex,jdbcType=INTEGER}-1)*#{pageSize,jdbcType=INTEGER}+1 and #{pageIndex,jdbcType=INTEGER}*#{pageSize,jdbcType=INTEGER}
    </select>

    <select id="getUserInfoByGuid" parameterType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoDto" resultType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoDto">
        select   ui.Id,  ui.UserId,ui.StudentId, left(ui.StudentId ,8)  studentNo,ui.UserName ,ui.Grade ,ui.MobilePhone,ui.Tel,s.School,ui.RegTime,
        ui.[RelativeState],ui.[EosStudentID]
        from [NewClassesAdmin].[dbo].UserInfo ui
            left join School s on s.Guid=ui.SchoolId
        where  ui.StudentId=#{studentId,jdbcType=NVARCHAR}
     </select>

    <select id="getUserWithOrderCount" parameterType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoDto" resultType="java.lang.Integer">
        select count(ui.Id) [count]
        <include refid="basicTable"></include>
        <include refid="dynamicWhere"></include>
    </select>


    <select id="getUserInfoStatistics"  resultType="com.onlyedu.ordermigratedbtool.model.dto.UserInfoStatisticsDto">
        declare @totalCount int  ;
        declare @relativeStateCount int  ;
        declare @unRelativeStateCount int  ;
        set @totalCount= (
        select  count( ui.Id) totalCount
        <include refid="basicTable"></include>
        )
        set @relativeStateCount= (
        select  count( ui.Id) totalCount
        <include refid="basicTable"></include>
        and isnull(ui.RelativeState,0)=1
        )
        set @unRelativeStateCount= (
        select  count( ui.Id) totalCount
        <include refid="basicTable"></include>
        and isnull(ui.RelativeState,0)=0
        )

        select @totalCount totalCount,@relativeStateCount relativeStateCount,@unRelativeStateCount unRelativeStateCount;

    </select>

    <select id="getGrade" resultType="java.lang.Integer">
        select distinct ISNULL( ui.Grade ,0) Grade
        <include refid="basicTable"></include>
    </select>

    <select id="getRelativeState" resultType="com.onlyedu.ordermigratedbtool.model.dto.RelativeStateDto">
        select distinct ISNULL( ui.RelativeState ,0) RelativeStateVal,
        case  ISNULL( ui.RelativeState ,0)  when 0 then '未关联'
        when 1 then '已关联'
        end RelativeState
        <include refid="basicTable"></include>
    </select>
</mapper>